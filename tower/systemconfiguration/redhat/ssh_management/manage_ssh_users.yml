- name: Get user details from hashi vault
  hosts: all
  # become: False
  gather_facts: False
  tasks:

  - debug:
      msg: "{{ hostvars }}"

  #[BL] Complete login to get default root
  #     then use the default root to login to the server intially if success set p/w in vault then reset on server 
  - name: Get Default root user from vault
    uri:
      url: 'https://{{ VAULT_SERVER_ADDRESS }}:{{ VAULT_SERVER_PORT }}/v1/secret/{{ HASHI_PATH }}'
      # status_code: [200, 202]
      method: GET
      return_content: false
      validate_certs: false
      headers:
        X-Vault-Token: "{{ ansible_password }}"
        Content-Type: application/json
    delegate_to: localhost
    run_once: true
    register: shh_credentials

  - name: Login to a form based webpage, then use the returned cookie to access the app in later tasks
    uri:
      url: 'https://{{ VAULT_SERVER_ADDRESS }}:{{ VAULT_SERVER_PORT }}/v1/secret/linux/{{ inventory_hostname }}'
      method: POST
      validate_certs: false
      headers:
        X-Vault-Token: "{{ ansible_password }}"      
      body_format: json
      body:
        root_password: "letmein"
      status_code: 204
    delegate_to: localhost
    register: update_password
  
  - name: configure ansible vars
    set_fact:
      ansible_user: "{{ shh_credentials.json.data.username }}"
      ansible_password: "{{ shh_credentials.json.data.password }}"      

- name: ssh user management
  hosts: all
  gather_facts: False
  tasks:
  - name: Testing
    shell: ssh root@{{ inventory_hostname }} "echo success"
    register: ssh_test
    delegate_to: localhost
        # failed_when: "'No route to host' in ssh_test.stderr"